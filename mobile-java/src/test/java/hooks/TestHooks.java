package hooks;

import io.cucumber.java.After;
import io.cucumber.java.Before;
import io.cucumber.java.Scenario;
import driver.DriverManager;
import io.appium.java_client.android.AndroidDriver;
import pages.LoginPage;
import pages.ProductsPage;
import pages.CartPage;

public class TestHooks {
    private static AndroidDriver driver;
    private static boolean isSessionInitialized = false;
    private static LoginPage login;
    private static ProductsPage products;
    private static CartPage cart;

    @Before
    public void setUp(Scenario scenario) throws Exception {
        System.out.println("üé¨ INICIANDO CEN√ÅRIO: " + scenario.getName());
        
        if (!isSessionInitialized) {
            System.out.println("üöÄ Inicializando sess√£o √∫nica do Appium...");
            System.out.println("üßπ O app ser√° fechado e limpo automaticamente pelo DriverManager");
            
            driver = DriverManager.get();
            login = new LoginPage(driver);
            products = new ProductsPage(driver);
            cart = new CartPage(driver);
            
            // Aguardar mais tempo o app carregar ap√≥s limpeza
            System.out.println("‚è≥ Aguardando app carregar ap√≥s limpeza...");
            Thread.sleep(8000); // Aumentar tempo de espera
            
            // Fazer login inicial sempre
            System.out.println("üîç Verificando autentica√ß√£o na sess√£o compartilhada...");
            
            // Verificar se j√° estamos logados
            if (products.loaded()) {
                System.out.println("‚úÖ J√° estamos logados na tela de produtos!");
            } else if (login.visible()) {
                System.out.println("üîë Fazendo login inicial...");
                login.login("standard_user", "secret_sauce");
                Thread.sleep(5000); // Aguardar carregamento
                
                if (products.loaded()) {
                    System.out.println("‚úÖ Login inicial bem-sucedido!");
                } else {
                    System.out.println("‚ö†Ô∏è Aviso: Login pode n√£o ter funcionado, mas continuando...");
                }
            } else {
                System.out.println("‚ö†Ô∏è Estado inesperado durante inicializa√ß√£o");
                // Tentar aguardar um pouco mais
                Thread.sleep(3000);
                if (login.visible()) {
                    System.out.println("üîë Fazendo login ap√≥s aguardar...");
                    login.login("standard_user", "secret_sauce");
                    Thread.sleep(5000);
                }
            }
            
            isSessionInitialized = true;
        } else {
            System.out.println("‚ôªÔ∏è Reutilizando sess√£o existente...");
            
            // Verificar se ainda estamos na tela correta
            if (driver != null && products != null && !products.loaded()) {
                System.out.println("üîÑ Sess√£o existente n√£o est√° na tela de produtos. Tentando navegar...");
                
                // Aguardar um pouco antes de tentar navegar
                Thread.sleep(3000);
                
                // Se estivermos na tela de login, fazer login novamente
                if (login.visible()) {
                    System.out.println("üîë Re-fazendo login...");
                    login.login("standard_user", "secret_sauce");
                    Thread.sleep(5000);
                } else {
                    System.out.println("‚ö†Ô∏è Estado inesperado - n√£o estamos em login nem produtos");
                    // Tentar pressionar back algumas vezes para voltar √† tela principal
                    try {
                        for (int i = 0; i < 3; i++) {
                            driver.navigate().back();
                            Thread.sleep(2000);
                            if (products.loaded()) {
                                System.out.println("‚úÖ Voltamos √† tela de produtos usando navega√ß√£o");
                                break;
                            }
                        }
                    } catch (Exception e) {
                        System.out.println("‚ö†Ô∏è Erro ao tentar navegar: " + e.getMessage());
                    }
                }
            }
        }
        
        // Verificar se estamos na tela de produtos antes de preparar carrinho
        if (products != null && products.loaded()) {
            // Limpar carrinho antes de cada cen√°rio para garantir estado limpo
            System.out.println("üõí Preparando carrinho para o cen√°rio...");
            products.openCart(); // Ir para o carrinho
            Thread.sleep(2000);
            cart.clearCart(); // Limpar todos os itens
            driver.navigate().back(); // Voltar para produtos
            Thread.sleep(2000);
            System.out.println("‚úÖ Carrinho preparado e voltamos para produtos");
        } else {
            System.out.println("‚ö†Ô∏è N√£o foi poss√≠vel preparar carrinho - n√£o estamos na tela de produtos");
        }
    }

    @After
    public void tearDown(Scenario scenario) {
        if (scenario.isFailed()) {
            System.out.println("‚ùå CEN√ÅRIO FALHOU: " + scenario.getName());
        } else {
            System.out.println("‚úÖ CEN√ÅRIO PASSOU: " + scenario.getName());
        }
        
        // N√£o fechar o driver aqui - manter sess√£o ativa
        System.out.println("üîÑ Mantendo sess√£o ativa para pr√≥ximo cen√°rio...");
    }

    // M√©todo est√°tico para obter o driver atual
    public static AndroidDriver getDriver() {
        return driver;
    }

    // M√©todo para finalizar a sess√£o (chamado manualmente se necess√°rio)
    public static void closeSession() {
        if (driver != null) {
            System.out.println("üîö Finalizando sess√£o do Appium...");
            driver.quit();
            driver = null;
            isSessionInitialized = false;
        }
    }

    // M√©todo para marcar que a sess√£o acabou (app foi fechado)
    public static void markSessionAsEnded() {
        System.out.println("üîÑ Marcando sess√£o como finalizada - pr√≥ximo cen√°rio ser√° reinicializado");
        isSessionInitialized = false;
        // N√£o limpar o driver aqui pois ele ainda pode estar sendo usado
        // driver = null;
        // login = null;
        // products = null;
    }
}